#!/bin/sh

CONTROLLER_URL="$(cat /etc/wiretide-controller 2>/dev/null || echo 'https://127.0.0.1')"
CA_CERT="/etc/wiretide-ca.crt"
TOKEN_FILE="/etc/wiretide-token"
INTERVAL=60       # Time between status polls (seconds)
POLL_DELAY=10     # Time between register retries (seconds)
DEBUG_LOG="/tmp/wiretide-debug.log"

# Determine MAC (identity)
IFACE=""
[ -d /sys/class/net/br-lan ] && IFACE="br-lan"
[ -z "$IFACE" ] && IFACE="$(ip route | awk '/default/ {print $5}' | head -n1)"
[ -z "$IFACE" ] && IFACE="$(ip -o link show | awk -F': ' '/state UP/ && $2 != "lo" {print $2; exit}')"
MAC="$(ip link show "$IFACE" 2>/dev/null | awk '/ether/ {print $2}')"

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $*" >> "$DEBUG_LOG"
}

fetch_token() {
    # Request a token (controller handles approval)
    log "Requesting token for MAC: $MAC"
    TOKEN=$(curl --cacert "$CA_CERT" -sSf -X GET "$CONTROLLER_URL/token/$MAC" || echo "")
    if [ -n "$TOKEN" ]; then
        echo "$TOKEN" > "$TOKEN_FILE"
        log "Received token and saved to $TOKEN_FILE"
    else
        log "Token fetch failed, will retry"
    fi
}

status_update() {
    [ ! -f "$TOKEN_FILE" ] && return 1
    TOKEN="$(cat "$TOKEN_FILE")"
    log "Sending status update to controller..."
    RESPONSE=$(curl --cacert "$CA_CERT" -s -w "%{http_code}" -o /dev/null \
        -H "Authorization: Bearer $TOKEN" \
        "$CONTROLLER_URL/status/$MAC")
    if [ "$RESPONSE" -eq 401 ]; then
        log "Token expired, refetching..."
        rm -f "$TOKEN_FILE"
        fetch_token
    fi
}

# Main loop
log "Starting Wiretide agent. Controller: $CONTROLLER_URL, MAC: $MAC"

# Wait for admin approval (register loop)
while [ ! -f "$TOKEN_FILE" ]; do
    fetch_token
    if [ ! -f "$TOKEN_FILE" ]; then
        log "Waiting for admin approval..."
        sleep "$POLL_DELAY"
    fi
done

# Poll loop
while true; do
    status_update
    sleep "$INTERVAL"
done

